/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ExternalForms;

import ExternalNonFormClasses.LogHandler;
import ExternalNonFormClasses.SQLConnect;
import brms_v2.Main;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mrRNBean
 */
public class Claimables extends JDialog {//wala pa na-call sa main

    Main main;
    LogHandler logHandler;
    DefaultTableModel model;
    SQLConnect connect;
    String tID = "", pID = "", fID = "", personName = "", formName = "";

    public Claimables(Main main) {
        super(main);
        initComponents();

        this.main = main;
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        connect = new SQLConnect();
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                enableMainHideThis();
            }
        });
    }

    public void callClass() {
        this.setVisible(true);
        this.main.setEnabled(false);

        setData();
    }

    public void setLogHandler(LogHandler logHandler) {
        this.logHandler = logHandler;
    }

    public void enableMainHideThis() {
        main.setEnabled(true);
        main.setVisible(true);
        dispose();
    }

    public void setData() { //bday
        setModelAndClearModelItems(formTable);
        connect.closeCon();
        connect = new SQLConnect();

        ResultSet rs = connect.getClaimables();
        try {
            //formentry with date_to_claim today and dateClaimed is N/A
            //get TransID V
            //get PID via TransID
            //get personName
            //get formID V 
            //get form name via formID 

            for (int x = 0; rs.next(); x++) {
                tID = String.valueOf(rs.getInt("transID"));
                fID = String.valueOf(rs.getInt("formID"));
                
                //connect.closeCon();
                connect = new SQLConnect();

                pID = String.valueOf(connect.getPersonIDViaTransID(tID));
                
                //connect.closeCon();
                connect = new SQLConnect();

                ResultSet person = connect.getPerson(pID);

                if (person.next()) {
                    personName = person.getString("fname") + " " + person.getString("lname");
                }
                
                //connect.closeCon();
                connect = new SQLConnect();

                ResultSet form = connect.getForm(fID);

                if (form.next()) {
                    formName = form.getString("formName");
                }
                
                model.insertRow(x, new String[]{tID
                        , personName
                        , formName});
            }

        } catch (SQLException ex) {
            System.out.println("Error: " + ex);
        }
    }

    public void setModelAndClearModelItems(JTable tb) {
        //ERASES ALL DATA FROM A TABLE 
        model = (DefaultTableModel) tb.getModel();
        while (tb.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewRequestHistory = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        formTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        viewRequestHistory.setBackground(new java.awt.Color(189, 195, 198));
        viewRequestHistory.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewRequestHistory.setForeground(new java.awt.Color(0, 102, 153));
        viewRequestHistory.setText("View Request History");
        viewRequestHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestHistoryActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(189, 195, 198));
        back.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        back.setForeground(new java.awt.Color(0, 102, 153));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        formTable.setBackground(new java.awt.Color(189, 195, 198));
        formTable.setForeground(new java.awt.Color(0, 0, 0));
        formTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trans ID", "Requested By", "Request"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        formTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(formTable);
        if (formTable.getColumnModel().getColumnCount() > 0) {
            formTable.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Claimable Forms Today");
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 291, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 150, Short.MAX_VALUE)
                        .addComponent(viewRequestHistory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(back)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewRequestHistory)
                    .addComponent(back))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewRequestHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestHistoryActionPerformed
        //call view Prof set Person ID
        if (formTable.getSelectedRow() >= 0) {
            tID = String.valueOf(formTable.getValueAt(formTable.getSelectedRow(), 0));
            personName = String.valueOf(formTable.getValueAt(formTable.getSelectedRow(), 1));
            main.claimablesAccess(tID, personName);
            logHandler.saveLog("Viewed Transaction via Claimables Panel with -Transaction ID: " + tID + " -Person ID: " + pID + "-Person Name: " + personName); //param 1 is Action
            enableMainHideThis();
        }
    }//GEN-LAST:event_viewRequestHistoryActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        enableMainHideThis();
    }//GEN-LAST:event_backActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTable formTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewRequestHistory;
    // End of variables declaration//GEN-END:variables
}
